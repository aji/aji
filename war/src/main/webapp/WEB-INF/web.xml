<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.4" xmlns="http://java.sun.com/xml/ns/j2ee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">

  <display-name>JSON JMX Agent</display-name>

  <!-- A dispatch filter for proper delivering JS script files -->
  <filter>
    <filter-name>dispatch-filter</filter-name>
    <filter-class>org.jolokia.aji.DispatchFilter</filter-class>
    <init-param>
      <param-name>staticPrefix</param-name>
      <param-value>/app</param-value>
    </init-param>
    <init-param>
      <param-name>dynamicPrefix</param-name>
      <param-value>/jolokia</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>dispatch-filter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>

  <!-- Jolokia servlet -->
  <servlet>
    <servlet-name>jolokia-agent</servlet-name>
    <servlet-class>org.jolokia.http.AgentServlet</servlet-class>
    <init-param>
      <description>
        Class names (comma separated) of RequestDispatcher used in addition
        to the LocalRequestDispatcher
      </description>
      <param-name>dispatcherClasses</param-name>
      <param-value>org.jolokia.jsr160.Jsr160RequestDispatcher</param-value>
    </init-param>
    <init-param>
      <description>
        Debugging state after startup. Can be changed via
        the Config MBean during runtime
      </description>
      <param-name>debug</param-name>
      <param-value>false</param-value>
    </init-param>
    <init-param>
      <description>
        Entries to keep in the history. Can be changed during
        runtime via the config MBean
      </description>
      <param-name>historyMaxEntries</param-name>
      <param-value>10</param-value>
    </init-param>
    <init-param>
      <description>
        Maximum number of entries to keep in the local
        debug history if switched on. Can be change via
        the config MBean during runtime.
      </description>
      <param-name>debugMaxEntries</param-name>
      <param-value>100</param-value>
    </init-param>
    <init-param>
      <description>
        Maximum depth when traversing bean properties.
        If set to 0, depth checking is disabled
      </description>
      <param-name>maxDepth</param-name>
      <param-value>15</param-value>
    </init-param>
    <init-param>
      <description>
        Maximum size of collections returned when
        serializing to JSON. When set to 0, not
        collections are truncated.
      </description>
      <param-name>maxCollectionSize</param-name>
      <param-value>1000</param-value>
    </init-param>
    <init-param>
      <description>
        Maximum number of objects which is traversed
        when serializing a single response. Use this
        as airbag to avoid boosting your memory and
        network traffic. Nevertheless, when set to 0
        not limit is used.
      </description>
      <param-name>maxObjects</param-name>
      <param-value>0</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>

  <servlet-mapping>
    <servlet-name>jolokia-agent</servlet-name>
    <url-pattern>/jolokia/*</url-pattern>
  </servlet-mapping>

  <welcome-file-list>
    <welcome-file>index.html</welcome-file>
  </welcome-file-list>
  <!--
  Example Configuration for switching on BASIC security. The role 'Jolokia'
  must be mapped to real users with passwords on the Appserver side:

  <login-config>
    <auth-method>BASIC</auth-method>
    <realm-name>Jolokia</realm-name>
  </login-config>

  <security-constraint>
    <web-resource-collection>
      <web-resource-name>Jolokia-Agent Access</web-resource-name>
      <url-pattern>/*</url-pattern>
    </web-resource-collection>
    <auth-constraint>
      <role-name>Jolokia</role-name>
    </auth-constraint>
  </security-constraint>

  <security-role>
    <role-name>Jolokia</role-name>
  </security-role>
  -->
</web-app>

<!--
  Copyright 2009-2010 Roland Huss

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->

